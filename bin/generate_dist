#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative "../application"
require_relative "../lib/cli"

cli = CLI.new([:version]) do |opts|
  opts.on("-V VERSION", "--version=VERSION", "Version of the documentation")
end
cli.parse!(ARGV)
cli.options.version ||= cli.read_file("VERSION").strip

puts("Generating `#{cli.options.version}` distribution files...")
cli.options_status

Application.establish_db_connection!

cli.write_file!("dist/categories.txt") do |file|
  file.write(Category.as_txt(Category.verticals, version: cli.options.version))
  file.write("\n")
end
cli.write_file!("dist/attributes.txt") do |file|
  file.write(Attribute.as_txt(Attribute.base, version: cli.options.version))
  file.write("\n")
end
cli.write_file!("dist/attribute_values.txt") do |file|
  file.write(Value.as_txt(Value.all, version: cli.options.version))
  file.write("\n")
end

mappings_json = MappingRule.legacy_as_json(MappingRule.all, version: cli.options.version)
categories_json = Category.as_json(Category.verticals, version: cli.options.version)
attributes_json = Attribute.as_json(Attribute.base, version: cli.options.version)
values_json = Value.as_json(Value.all, version: cli.options.version)

cli.write_file!("dist/taxonomy.json") do |file|
  file.write(JSON.pretty_generate(categories_json.merge(attributes_json)))
  file.write("\n")
end
cli.write_file!("dist/categories.json") do |file|
  file.write(JSON.pretty_generate(categories_json))
  file.write("\n")
end
cli.write_file!("dist/attributes.json") do |file|
  file.write(JSON.pretty_generate(attributes_json))
  file.write("\n")
end
cli.write_file!("dist/attribute_values.json") do |file|
  file.write(JSON.pretty_generate(values_json))
  file.write("\n")
end
cli.write_file!("dist/mappings.json") do |file|
  file.write(JSON.pretty_generate(mappings_json))
  file.write("\n")
end
