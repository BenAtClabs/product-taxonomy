#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative "../application"
require_relative "../lib/cli"

cli = CLI.new([:version]) do |opts|
  opts.on("-V VERSION", "--version=VERSION", "Version of the documentation")
end
cli.parse!(ARGV)
cli.options.version ||= cli.read_file("VERSION").strip

puts("Generating `#{cli.options.version}` distribution files...")
cli.options_status

Application.establish_db_connection!

cli.write_file!("dist/categories.txt") do |file|
  file.write(Distribution::VerticalSerializer.to_txt_collection(Category.verticals, version: cli.options.version))
  file.write("\n")
end
cli.write_file!("dist/attributes.txt") do |file|
  file.write(Distribution::PropertySerializer.to_txt_collection(Property.base, version: cli.options.version))
  file.write("\n")
end
cli.write_file!("dist/attribute_values.txt") do |file|
  file.write(Distribution::PropertyValueSerializer.to_txt_collection(PropertyValue.all, version: cli.options.version))
  file.write("\n")
end

mapping_serializer = Distribution::MappingSerializer.new(
  mapping_rules: MappingRule.all,
  version: cli.options.version,
)
category_json = Distribution::VerticalSerializer.as_json_collection(Category.verticals, version: cli.options.version)
attribute_json = Distribution::PropertySerializer.as_json_collection(Property.base, version: cli.options.version)

cli.write_file!("dist/taxonomy.json") do |file|
  file.write(JSON.pretty_generate(category_json.merge(attribute_json)))
  file.write("\n")
end
cli.write_file!("dist/categories.json") do |file|
  file.write(JSON.pretty_generate(category_json))
  file.write("\n")
end
cli.write_file!("dist/attributes.json") do |file|
  file.write(JSON.pretty_generate(attribute_json))
  file.write("\n")
end
cli.write_file!("dist/mappings.json") do |file|
  file.write(mapping_serializer.mappings)
  file.write("\n")
end
