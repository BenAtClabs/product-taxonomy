#!/usr/bin/env ruby

require 'yaml'
require 'json'
require 'cgi'
require 'fileutils'

require_relative '../application'

class GenerateDocs
  class << self
    def generate_pages_data
      FileUtils.mkdir_p("#{Application.root}/docs/_data")

      puts "Loading data"
      puts "  → Reading dist/categories.json..."
      category_data = JSON.load_file("#{Application.root}/dist/categories.json")
      puts "  → Reading dist/attributes.json..."
      attribute_data = JSON.load_file("#{Application.root}/dist/attributes.json")
      puts "  ✓"
      puts

      generate_sibling_groups(category_data.fetch('verticals'))
      generate_search_index(category_data.fetch('verticals'))
      generate_attributes(attribute_data.fetch('attributes'))
    end

    private

    def generate_sibling_groups(verticals)
      puts "Preparing categories"
      puts "  → Parsing categories into sibling groups"
      sibling_groups = {}
      verticals.each do |vertical|
        vertical['categories'].each do |category|
          parent_id = category.fetch('parent_id')
          parent_id = 'root' if parent_id.nil? || parent_id.empty?
          node_depth = category.fetch('level')

          mapped_category = {
            "id" => category.fetch('id'),
            "name" => category.fetch('name'),
            "fully_qualified_type" => category.fetch('full_name'),
            "depth" => node_depth,
            "parent_id" => parent_id,
            "node_type" => node_depth.zero? ? 'root' : 'leaf',
            "ancestor_ids" => category.fetch('ancestors').map { _1.fetch('id') }.join(','),
            "attribute_ids" => category.fetch('attributes').map { _1.fetch('id') }.join(','),
          }

          sibling_groups[node_depth] ||= {}
          sibling_groups[node_depth][parent_id] ||= []
          sibling_groups[node_depth][parent_id] << mapped_category
        end
      end
      if sibling_groups.empty?
        puts "  ⨯ No categories found. Aborting."
        fail
      end

      puts "  → Writing docs/_data/sibling_groups.yml"
      File.open("#{Application.root}/docs/_data/sibling_groups.yml", "w") do |file|
        file.write(sibling_groups.to_yaml(line_width: 1000))
      end
      puts "  ✓"
      puts
    end

    def generate_search_index(verticals)
      puts "Preparing search index"
      puts "  → Parsing categories into search index"
      search_index = verticals.flat_map do |vertical|
        vertical['categories'].map do |category|
          {
            "title" => category.fetch("full_name"),
            "url" => "?categoryId=#{CGI.escapeURIComponent(category.fetch("id"))}",
            "category" => {
              "id" => category.fetch("id"),
              "name" => category.fetch("name"),
              "fully_qualified_type" => category.fetch("full_name"),
              "depth" => category.fetch("level"),
            }
          }
        end
      end

      search_index_path = "docs/_data/search_index.json"
      search_index_symlink = "docs/assets/js/search_index.json"
      puts "  → Writing #{search_index_path}"
      File.open("#{Application.root}/#{search_index_path}", "w") do |file|
        file.write(search_index.to_json)
      end
      File.delete("#{Application.root}/#{search_index_symlink}")
      File.symlink("#{Application.root}/#{search_index_path}", "#{Application.root}/#{search_index_symlink}")
      puts "  ✓"
      puts
    end

    def generate_attributes(attributes)
      puts "Preparing attributes"
      puts "  → Writing docs/_data/attributes.yml"
      File.open("#{Application.root}/docs/_data/attributes.yml", "w") do |file|
        file.write(attributes.to_yaml(line_width: 1000))
      end
      puts "  ✓"
      puts
    end
  end
end

GenerateDocs.generate_pages_data
