#!/usr/bin/env ruby

require 'yaml'
require 'fileutils'

require_relative '../application'
require_relative '../src/taxonomy'

class GenerateDocs
  class << self
    def generate_pages_data
      vertical_data = Dir.glob(Application.from_root("data/categories/*.yml")).map { YAML.load_file(_1) }
      attribute_data = YAML.load_file(Application.from_root("data/attributes/attributes.yml"))
      taxonomy = Taxonomy.new(vertical_data:, attribute_data:)
      sibling_groups = {}
      taxonomy.verticals.each do |root|
        root.descendants_and_self.each do |category|
          parent_id = category.parent&.id || "root"

          data_item = {
            "id" => category.id,
            "name" => category.name,
            "fully_qualified_type" => category.full_name,
            "depth" => category.level,
            "parent_id" => parent_id,
            "node_type" => category.root? ? "root" : "leaf",
            "ancestor_ids" => category.ancestors.map(&:id).join(","),
            "attribute_ids" => category.attributes.map(&:id).join(","),
          }

          sibling_groups[category.level] ||= {}
          sibling_groups[category.level][parent_id] ||= []
          sibling_groups[category.level][parent_id] << data_item
        end
      end
      raise "No data found in data/categories/*.yml files. Please check the data." if sibling_groups.empty?

      FileUtils.mkdir_p(Application.from_root('docs/_data'))
      File.open(Application.from_root("docs/_data/sibling_groups.yml"), "w") do |file|
        file.write(sibling_groups.to_yaml(line_width: 1000))
      end

      FileUtils.cp(
        Application.from_root('data/attributes/attributes.yml'),
        Application.from_root('docs/_data/attributes.yml')
      )
    end
  end
end

GenerateDocs.generate_pages_data
